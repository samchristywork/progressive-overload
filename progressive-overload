#!/bin/bash

forms="$HOME/.exercise.forms"
log="$HOME/.exercise.log"

if [ ! -f "$forms" ]; then
  touch "$forms"
fi

if [ ! -f "$log" ]; then
  touch "$log"
fi

function preprocess_forms() {
  cat $forms | awk -F"\t" '
  function strip(str) {
    gsub(/^[[:space:]]+|[[:space:]]+$/, "", str)
    return str
  }
  {
    muscle_group=strip($1)
    rank=strip($2)
    exercise=strip($3)
    description=strip($4)

    print muscle_group "\t" exercise "\t" description "\t" rank
  }'
}

function usage() {
  echo "Usage: $0 <command>"
  echo "Commands:"
  echo "  add <exercise> <reps> <intensity> <failure> - Add an exercise"
  echo "  next - Perform a random exercise"
  echo "  pick - Perform a picked exercise"
  echo "  search - Search for an exercise"
  echo "  exercises - List all exercises"
  echo "  muscles - List all muscle groups"
  echo "  preprocess - Preprocess the forms file"
  echo "  summary - Show a summary of all exercises"
  echo "  show - Show all activity"
  echo "  help - Show this help message"
  exit 1
}

function get_failure_rate() {
  exercise="$1"

  total=$(grep "$exercise" $log | wc -l)
  failures=$(grep "$exercise" $log | awk -F"\t" '{
    failure=$5
    if (failure=="true") {
      print $0
    }
  }' | wc -l)

  if [ $total -eq 0 ]; then
    echo "0"
    return
  fi

  echo "$failures * 100 / $total" | bc
}

function format_time() {
  seconds=$1

  awk -v seconds="$seconds" 'BEGIN {
    days = int(seconds / 86400)
    seconds = seconds % 86400
    hours = int(seconds / 3600)
    seconds = seconds % 3600
    minutes = int(seconds / 60)
    seconds = seconds % 60

    if (days > 0) {
      printf "%dd ", days
    }

    if (hours > 0) {
      printf "%dh ", hours
    }

    if (minutes > 0) {
      printf "%dm ", minutes
    }

    if (seconds > 0) {
      printf "%ds", seconds
    }
  }'
}

function perform() {
  exercise="$1"
  failure_rate=$(get_failure_rate "$exercise")

  echo $exercise
  echo
  echo "Muscle group: $(preprocess_forms | grep "$exercise" | awk -F"\t" '{print $1}')"
  echo
  echo "Description: $(preprocess_forms | grep "$exercise" | awk -F"\t" '{print $3}')"
  echo
  echo "Failure rate: $failure_rate%"
  echo

  intensity=$(grep "$exercise" $log | tail -n 1 | awk -F"\t" '{print $4}')
  if [ -z "$intensity" ]; then
    read -p "Enter intensity: " intensity
  else
    echo "Intensity: $intensity"
    echo

    if [ $failure_rate -lt 5 ]; then
      read -p "Failure rate is low. Enter new intensity: " intensity
    fi
  fi

  read -p "Enter reps: " reps
  read -p "Did you fail? [y/n] " failed
  if [ "$failed" == "y" ] || [ "$failed" == "Y" ]; then
    failure="true"
  else
    failure="false"
  fi

  "$0" add "$exercise" "$reps" "$intensity" "$failure"

  "$0" show
}

case $1 in
  add)
    date=$(date "+%Y-%m-%d %H:%M:%S")
    exercise="$2"
    reps="$3"
    intensity="$4"
    failure="$5"

    if [ -z "$exercise" ] || [ -z "$reps" ] || [ -z "$intensity" ] || [ -z "$failure" ]; then
      echo "Usage: $0 add <exercise> <reps> <intensity> <failure>"
      exit 1
    fi

    echo -e "$date\t$exercise\t$reps\t$intensity\t$failure" >> $log
    ;;
  next)
    random_exercise=$(preprocess_forms | shuf -n 1 | awk -F"\t" '{print $2}')
    perform "$random_exercise"
    ;;
  pick)
    exercise=$(preprocess_forms | awk -F"\t" '{print $2}' | fzf)
    perform "$exercise"
    ;;
  search)
    preprocess_forms | column -t -s $'\t' | fzf
    ;;
  exercises)
    preprocess_forms | awk -F"\t" '{print $2}' | sort
    ;;
  muscles)
    preprocess_forms | awk -F"\t" '{print $1}' | sort
    ;;
  preprocess)
    preprocess_forms
    ;;
  summary)
    ;;
  show)
    ;;
  help)
    usage
    ;;
  *)
    echo "Command not found"
    usage
    exit 1
    ;;
esac
